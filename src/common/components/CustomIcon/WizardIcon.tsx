import { CustomIcon } from './CustomIcon'
import { CustomIconProps } from './types'

export interface WizardIconProps extends CustomIconProps {
  step: number
  active?: boolean
  complete?: boolean
}

export const WizardIcon = ({
  active,
  complete,
  height = 22,
  step = 1,
  viewBox = '0 0 22 22',
  width = 22,
  ...props
}: WizardIconProps) => {
  const stepColor = active ? '#ffffff' : '#74747D'
  const stepBackground = active ? '#3E33BB' : 'transparent'
  const stepStroke = active ? '#3E33BB' : '#CECED8'

  const renderStep = (): JSX.Element => {
    switch (step) {
      case 1: {
        return (
          <path
            d="M9.14795 8.87195L11.1639 8.34395V15.0879H12.8319V6.54395L9.14795 7.32395V8.87195Z"
            fill={stepColor}
          />
        )
      }
      case 2: {
        return (
          <path
            d="M7.42651 15.112H14.1825V13.54H10.6665L12.8505 11.476C13.2025 11.156 13.4865 10.8 13.7025 10.408C13.9185 10.016 14.0265 9.59603 14.0265 9.14803C14.0265 8.84403 13.9625 8.54003 13.8345 8.23603C13.7145 7.93203 13.5265 7.65603 13.2705 7.40803C13.0225 7.15203 12.7065 6.94803 12.3225 6.79603C11.9465 6.63603 11.5065 6.55603 11.0025 6.55603C10.3225 6.55603 9.74651 6.70003 9.27451 6.98803C8.81051 7.26803 8.45851 7.64803 8.21851 8.12803C7.97851 8.60803 7.85851 9.14803 7.85851 9.74803H9.53851C9.53851 9.41203 9.59451 9.11603 9.70651 8.86003C9.82651 8.60403 9.99051 8.40803 10.1985 8.27203C10.4145 8.12803 10.6705 8.05603 10.9665 8.05603C11.1745 8.05603 11.3585 8.09203 11.5185 8.16403C11.6785 8.22803 11.8145 8.31603 11.9265 8.42803C12.0385 8.54003 12.1225 8.66803 12.1785 8.81203C12.2345 8.95603 12.2625 9.10403 12.2625 9.25603C12.2625 9.47203 12.2225 9.68003 12.1425 9.88003C12.0625 10.08 11.9465 10.28 11.7945 10.48C11.6425 10.68 11.4585 10.896 11.2425 11.128L7.42651 15.112Z"
            fill={stepColor}
          />
        )
      }
      case 3: {
        return (
          <path
            d="M10.3254 10.9959C10.9574 10.9959 11.5214 10.9119 12.0174 10.7439C12.5134 10.5759 12.9054 10.3319 13.1934 10.0119C13.4814 9.68395 13.6254 9.29195 13.6254 8.83595C13.6254 8.41195 13.5174 8.02795 13.3014 7.68395C13.0854 7.33995 12.7694 7.06395 12.3534 6.85594C11.9454 6.64795 11.4494 6.54395 10.8654 6.54395C10.3134 6.54395 9.82944 6.65195 9.41344 6.86794C8.99744 7.08394 8.66944 7.37995 8.42944 7.75595C8.19744 8.12395 8.08144 8.54795 8.08144 9.02795H9.67744C9.67744 8.71595 9.78944 8.45995 10.0134 8.25995C10.2454 8.05195 10.5294 7.94795 10.8654 7.94795C11.1054 7.94795 11.3014 7.98795 11.4534 8.06795C11.6054 8.14794 11.7214 8.26394 11.8014 8.41594C11.8814 8.56795 11.9214 8.74395 11.9214 8.94395C11.9214 9.10395 11.8814 9.25995 11.8014 9.41195C11.7294 9.55595 11.6254 9.68795 11.4894 9.80795C11.3534 9.91995 11.1854 10.0079 10.9854 10.0719C10.7934 10.1359 10.5734 10.1679 10.3254 10.1679V10.9959ZM10.7934 15.2559C11.4174 15.2559 11.9574 15.1559 12.4134 14.9559C12.8774 14.7479 13.2334 14.4599 13.4814 14.0919C13.7374 13.7239 13.8654 13.2999 13.8654 12.8199C13.8654 12.3959 13.7774 12.0359 13.6014 11.7399C13.4254 11.4359 13.1774 11.1879 12.8574 10.9959C12.5374 10.7959 12.1614 10.6519 11.7294 10.5639C11.3054 10.4759 10.8374 10.4319 10.3254 10.4319V11.3439C10.6214 11.3439 10.8814 11.3759 11.1054 11.4399C11.3374 11.4959 11.5294 11.5799 11.6814 11.6919C11.8414 11.8039 11.9614 11.9439 12.0414 12.1119C12.1214 12.2719 12.1614 12.4479 12.1614 12.6399C12.1614 12.9039 12.1054 13.1239 11.9934 13.2999C11.8814 13.4759 11.7254 13.6119 11.5254 13.7079C11.3334 13.7959 11.1054 13.8399 10.8414 13.8399C10.5854 13.8399 10.3494 13.7919 10.1334 13.6959C9.91744 13.5919 9.74544 13.4439 9.61744 13.2519C9.48944 13.0599 9.42544 12.8279 9.42544 12.5559H7.72144C7.72144 12.9159 7.79344 13.2599 7.93744 13.5879C8.08144 13.9079 8.28544 14.1959 8.54944 14.4519C8.81344 14.6999 9.13344 14.8959 9.50944 15.0399C9.88544 15.1839 10.3134 15.2559 10.7934 15.2559Z"
            fill={stepColor}
          />
        )
      }
      case 4: {
        return (
          <path
            d="M7 13.252H14.296V11.788H12.58L12.376 11.968H9.376L11.356 9.13602V12.556L11.212 12.688V14.8H12.976V6.40002H11.812L7 13.252Z"
            fill={stepColor}
          />
        )
      }
      case 5: {
        return (
          <path
            d="M7 13.252H14.296V11.788H12.58L12.376 11.968H9.376L11.356 9.13602V12.556L11.212 12.688V14.8H12.976V6.40002H11.812L7 13.252Z"
            fill={stepColor}
          />
        )
      }
      default: {
        throw Error('Invalid step')
      }
    }
  }

  return (
    <CustomIcon height={height} viewBox={viewBox} width={width} {...props}>
      {complete ? (
        <>
          <circle cx="11" cy="11" fill="#DBD7FB" r="11" />
          <path
            d="M7 11.4286L10.5556 14L15 8"
            stroke="#3E33BB"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="2"
          />
        </>
      ) : (
        <>
          <circle cx="11" cy="11" fill={stepBackground} r="10.5" stroke={stepStroke} />
          {renderStep()}
        </>
      )}
    </CustomIcon>
  )
}
